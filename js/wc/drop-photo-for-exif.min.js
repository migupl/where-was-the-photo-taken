/*!
  * drop-photo-for-exif (https://github.com/migupl/drop-photo-get-exif-data)
  * Licensed under MIT (https://github.com/migupl/drop-photo-get-exif-data/blob/main/LICENSE)
  */
(e=>{class t extends HTMLElement{#e;constructor(){super();const e=this.attachShadow({mode:"closed"});this.#e=this.#t(e),this.#e.processFiles()}connectedCallback(){const e=document.createElement("style");e.textContent=this.#e.style;const t=document.createElement("div");t.className="item",t.innerHTML=this.#e.icon;const i=document.createElement("input");i.type="file",i.multiple="multiple",i.onchange=e=>{const t=Array.from(i.files);this.#i(t)};const o=document.createElement("span");o.role="button",o.className="upload",o.textContent=this.#e.uploadText,o.onclick=e=>i.click();const n=document.createElement("div");n.className="item",n.textContent=this.#e.dragText+" ",n.appendChild(o);const a=document.createElement("div");a.id="drag-area",a.appendChild(t),a.appendChild(n);const r=document.createElement("div");r.className="item",r.textContent=this.#e.dropText;const s=document.createElement("div");s.id="drop-area",s.style="display: none;",s.appendChild(r);const l=this.#e.shadow;l.appendChild(e),l.appendChild(a),l.appendChild(s)}#o=function(e=((e,t)=>console.log("Do something after image is ready")),t=(e=>console.log("Do something after file is ready")),i=(()=>console.log("Do something on complete"))){const o={geojson:"application/geo+json",jfif:"image/jpeg",jpeg:"image/jpeg",jpg:"image/jpeg",pjpeg:"image/jpeg",pjp:"image/jpeg",png:"image/png",tiff:"image/tiff",tif:"image/tiff",webp:"image/webp"};let n=0;const a=e=>{const t=e.split(".").pop();return o[t]||""},r=e=>{if(e.isDirectory)return{directory:e};if(e instanceof File)return{file:e};const t=e?.webkitGetAsEntry();return t.isDirectory?{directory:t}:{file:e.getAsFile()}},s=e=>{--n;const t=e.filter((e=>e.isDirectory));d(t);e.filter((e=>e.isFile)).forEach((e=>e.file(l)))},l=async o=>{++n;const r=o.type?o:new File([o],o.name,{type:a(o.name)}),s=r.type.startsWith("image/")&&await(e=>ExifReader.load(e).then((e=>{let t={details:e};if(e.GPSLatitude&&e.GPSLatitudeRef&&e.GPSLongitude&&e.GPSLongitudeRef&&(t.location={latitude:`${e.GPSLatitude.description} ${e.GPSLatitudeRef.value[0]}`,longitude:`${e.GPSLongitude.description} ${e.GPSLongitudeRef.value[0]}`},e.GPSAltitude)){const[i,o]=e.GPSAltitude.value;t.location.altitude=i/o}return t})).catch((e=>(console.warn("Extracting EXIF data error, message:",e.message),{}))))(r);((o,a)=>{a?e(o,a):t(o),--n,n||i()})(r,s)},d=e=>{for(let i of e){const e=r(i);e.directory?(t=e.directory,++n,t.createReader().readEntries(s)):l(e.file)}var t};return{process:d}};#n=(()=>{const e=e=>this.#e.shadow.dispatchEvent(e),t=(e,t)=>{const i={bubbles:!0,composed:!0};return t?i.detail={name:e.name,image:e,location:t.location,exif:t.details}:e&&(i.detail=e),i};return{onCompleted:()=>e(new CustomEvent("drop-photo-for-exif:completed-batch",t())),whenFileReady:i=>e(new CustomEvent("drop-photo-for-exif:file",t(i))),whenImageReady:(i,o)=>e(new CustomEvent("drop-photo-for-exif:image",t(i,o)))}})();#t=e=>{const t="#E8E8E8",i="Drag files here or",o="Drop files here",n="Sorry, something went wrong. Please try again.",a="upload files",r=(e=!0)=>{const t=this.#e.shadow.getElementById("drag-area"),i=this.#e.shadow.getElementById("drop-area");e?(t.style="display: none",i.style="display: flex"):(t.style="display: flex",i.style="display: none")},s=this.getAttribute("drag-area-background")||t;return{dragText:this.getAttribute("drag-text")||i,dropText:this.getAttribute("drop-text")||o,errorText:this.getAttribute("error-text")||n,uploadText:this.getAttribute("upload-text")||a,icon:`<svg viewBox="0 0 59 49" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="40.772121" height="31.674221" x="0.614479" y="12.7783" fill="${s}" /><path fill-rule="evenodd" clip-rule="evenodd" d="M0.614479 12.7783L6.74988 12.7783L6.74988 14.7158L2.55198 14.7158L2.55198 18.9137L0.614479 18.9137L0.614479 12.7783Z" fill="#000000"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M39.3644 42.4866L39.3644 38.2887L41.3019 38.2887L41.3019 44.4241L35.1665 44.4241L35.1665 42.4866L39.3644 42.4866Z" fill="#000000"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M0.614479 38.2887L2.55198 38.2887L2.55198 42.4866L6.74987 42.4866L6.74987 44.4241L0.614479 44.4241L0.614479 38.2887Z" fill="#000000"></path><path d="M19.6665 30.2531H58.4165L58.4165 0.544722H19.6665L19.6665 30.2531Z" fill="#379fe5"></path><path d="M19.6665 21.8429L19.6665 30.2525L58.4168 30.2525L58.4168 19.7406L49.6667 12.4069C48.6234 11.5342 47.2931 11.0699 45.9272 11.1018C44.5614 11.1337 43.2547 11.6596 42.2542 12.5801L33.4166 20.7918L28.4166 17.2548C27.7332 16.7781 26.9013 16.5563 26.0684 16.6288C25.2354 16.7012 24.4554 17.0632 23.8666 17.6505L19.6665 21.8429Z" fill="#145207"></path><path d="M30.0056 12.9386C31.7315 12.9386 33.1306 11.5395 33.1306 9.8136C33.1306 8.08773 31.7315 6.68863 30.0056 6.68863C28.2798 6.68863 26.8807 8.08773 26.8807 9.8136C26.8807 11.5395 28.2798 12.9386 30.0056 12.9386Z" fill="#F2DF2E"></path></svg>`,processFiles:()=>{this.addEventListener("drop",(e=>{e.preventDefault(),r(!1);const{items:t}=e.dataTransfer;this.#i(t)})),this.addEventListener("dragenter",(e=>{e.preventDefault(),r()})),this.addEventListener("dragleave",(e=>{r(!1)})),this.addEventListener("dragover",(e=>{e.preventDefault(),r()}))},shadow:e,style:`:host #drag-area, :host #drop-area {display: flex;flex-wrap: wrap;justify-content: center;align-items: center;}#drop-area {height: 100%;background: ${s}}.item {margin: 10px;}div svg {min-width: 50px;}div > * {position: relative;}.upload {color: blue;cursor: pointer;}.upload:hover {text-decoration: underline;}`}};#i=e=>{0==e.length&&alert(this.#e.errorText),this.#o(this.#n.whenImageReady,this.#n.whenFileReady,this.#n.onCompleted).process(e)}}let i=document.createElement("script");i.src="https://cdn.jsdelivr.net/npm/exifreader@4.12.0/dist/exif-reader.min.js",i.onload=function(e){customElements.define("drop-photo-for-exif",t),i=null},document.body.append(i)})();
